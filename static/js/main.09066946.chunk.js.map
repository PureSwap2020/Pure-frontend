{"version":3,"sources":["state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/toasts/index.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/getRpcUrl.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/pools/fetchPools.ts","config/constants/teams.ts","state/teams/helpers.ts","components/layout/Page.tsx","utils/contractHelpers.ts","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/achievements/index.ts","state/tvl/fetchTvl.ts","state/tvl/index.ts","contexts/RefreshContext.tsx","contexts/Localisation/translationsContext.ts","contexts/BlockContext.tsx","components/Tags.tsx","hooks/useRefresh.ts","utils/addressHelpers.ts","config/constants/types.ts","hooks/useWeb3.ts","config/index.ts","components/UnlockButton.tsx","utils/makeBatchRequest.ts","config/constants/index.ts","components/PageLoader.tsx","config/constants/ifo.ts","hooks/useApprove.ts","hooks/useHarvest.ts","config/constants/contracts.ts","components/layout/Container.tsx","components/layout/Flex.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/Input/Input.tsx","utils/multicall.ts","state/actions.ts","utils/web3.ts","hooks/useContract.ts","hooks/useI18n.ts","config/constants/pools.ts","utils/callHelpers.ts","state/hooks.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/ToastListener/index.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","utils/formatBalance.ts","state/teams/index.tsx","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useBlock.ts"],"names":["transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","Number","points","profileContract","getContract","pancakeProfileAbi","getPancakeProfileAddress","rabbitContract","pancakeRabbitsAbi","getPancakeRabbitsAddress","getUsername","address","a","fetch","process","response","ok","json","username","getProfile","methods","hasRegistered","call","profile","getUserProfile","getTeam","team","getBunnyId","bunnyId","nft","nfts","find","nftItem","localStorage","setItem","JSON","stringify","avatar","images","sm","profileSlice","createSlice","name","initialState","isInitialized","isLoading","data","reducers","profileFetchStart","state","profileFetchSucceeded","action","payload","profileFetchFailed","addPoints","actions","fetchProfile","dispatch","toastsSlice","push","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","nodes","getNodeUrl","randomIndex","random","Nfts","description","lg","md","ipfs","video","webm","mp4","sortOrder","blur","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAdress","getAddress","lpAddresses","calls","tokenAddresses","params","quoteTokenAdresses","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","fetchFarmsPublicDataAsync","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","callsStartBlock","poolConfig","contractAddress","sousChefABI","starts","cakePoolConfig","startBlock","sousId","endBlock","fetchPoolsTotalStatking","nonBnbPools","filter","p","stakingTokenName","QuoteToken","BNB","bnbPool","callsNonBnbPools","stakingTokenAddress","callsBnbPools","getWbnbAddress","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchTotalPoolsPoint","getSousChefAddress","totalAllPoint","point","fetchSinglePoolsPoint","res","fetchPoolApy","pool","cakePriceUsd","bnbPriceUSD","singleChefTotalAmount","singlePoolsPoint","totalPoolsPoint","tokenName","tokenPrice","toNumber","getPriceTokenSymbol","_priceData","usd","poolOutput","poolTvl","_apr","isNaN","apr","tvlPrice","teams","alt","background","textColor","users","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","numberTeams","nbTeams","makeBatchRequest","teamData","onChainTeamData","Page","Container","mediaQueries","getProfileContract","profileABI","getPancakeRabbitContract","getBunnyFactoryContract","bunnyFactoryAbi","getBunnyFactoryAddress","getBunnySpecialContract","bunnySpecialAbi","getBunnySpecialAddress","campaigns","type","title","badge","campaignMap","Map","campaign","set","getAchievementTitle","fallback","getAchievementDescription","getUserPointIncreaseEvents","getPastEvents","fromBlock","toBlock","userAddress","events","getAchievements","pointIncreaseEvents","event","has","returnValues","campaignId","campaignMeta","get","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","fetchPrice","undefined","coingeckoTokenName","_price","_priceJson","window","fetchTvl","factoryABI","factory","arrPairCall","pair","getReservesCalls","PureSwapPairABI","reserves","lp","num","token0","token1","getTokenNameCalls","tokenNameArr","slp","arr","item","obj","number","getLpToken","tvlSlice","setTvlPublicData","fetchTvlPublicDataAsync","tvl","RefreshContext","createContext","slow","fast","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","defaultTranslationState","translations","setTranslations","TranslationsContext","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","useRefresh","fastRefresh","slowRefresh","getCakeAddress","addresses","cake","masterChef","sousChef","getMulticallAddress","mulltiCall","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","pancakeProfile","pancakeRabbits","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","bunnySpecial","PoolCategory","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","setweb3","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_POOL_PID","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","MAX_NUMBER","ADDRESS_NONE","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","batch","BatchRequest","promises","resolve","reject","add","request","err","result","execute","communityFarms","isCommunity","tokenSymbol","Wrapper","PageLoader","ifos","abi","SrarterV3","startAt","time","timeClose","currency","isToken","decimal","symbol","underlying","totalSupply","ratio","progress","amount","purchasedCurrencyOf","totalPurchasedAmount","toWei","totalPurchasedUnderlying","totalPurchasedCurrency","status","website","whitePaper","twitter","telegram","github","yuque","linkUrl","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","useSousApprove","sousChefContract","useSousChef","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","handleHarvest","soushHarvest","updateUserPendingReward","updateUserBalance","56","97","syrup","busd","ust","FlexLayout","useSousStake","handleStake","sousStake","updateUserStakedBalance","onStake","useStake","stake","console","useSousUnstake","onUnstake","log","sousUnstake","useUnstake","unstake","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","multi","Contract","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","decodeFunctionResult","getMultiCallProvider","provider","chainId","processResult","cloneDeep","Array","isArray","o","key","Object","assign","contractOptions","useContract","contract","setContract","useERC20","useBunnyFactory","usePancakeRabbits","useProfile","useLotteryTicket","lotteryTicket","rawAbi","poolCategory","BINANCE","sousChefBnb","usePointCenterIfoContract","useBunnySpecialContract","useBalance","BNBBalance","useBNBBalance","useTokenBalance","balance","setBalance","blockHeight","useBlock","getBalance","then","catch","e","balanceOf","translationId","foundTranslation","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","keys","dataKey","templateKey","RegExp","replace","pools","PURE","CORE","projectLink","tokenPerBlock","isFinished","MX","WBNB","BUSD","BTCB","options","ethers","constants","MaxUint256","send","from","deposit","gas","on","transactionHash","withdraw","ZERO","useFetchPublicData","fetchPoolsPublicDataAsync","useTvl","useSelector","useFarms","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","usePriceBnbBusd","usePriceCakeBusd","usePriceEthBusd","useToast","useMemo","pushToast","toastError","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","removeToast","clearToast","useFetchProfile","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","quoteTokenSymbol","contracts","CAKE","GlobalStyle","createGlobalStyle","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","getItem","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","translationApiResponse","error","langObject","isDark","toggleTheme","ThemeContextProvider","setIsDark","prevState","dark","light","useTheme","StyledThemeContext","label","icon","href","items","Menu","login","logout","currentLang","langs","setLang","links","image","profileLink","noProfileLink","showPip","ToastListener","toasts","onRemove","StyledLabel","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","start","end","duration","separator","defaultProps","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","onSelectMax","toLocaleString","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","getFullDisplayBalance","handleChange","currentTarget","handleSelectMax","fullWidth","disabled","WithdrawModal","CompoundModal","BalanceRow","CardTitle","Card","card","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","getBalanceNumber","textAlign","marginTop","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","OccupyBox","PoolCard","apy","stakingLimit","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","Math","isOldSyrup","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentWithdraw","handleApprove","display","alignItems","flex","src","width","height","HarvestButton","eq","isFinite","CardImage","img","Hero","Farm","path","useRouteMatch","stackedOnly","poolsWithApy","getApy","partition","finishedPools","openPools","stackedOnlyPools","as","mb","Flex","exact","orderBy","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","history","createBrowserHistory","bullNft","nftList","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","justifyContent","bold","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","Lottery","IFO","NotFound","Collectibles","Teams","Team","Profile","App","warn","Global","component","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","profileReducer","teamsReducer","achievementsReducer","tvlReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","displayBalance","dividedBy","toFixed","formatAmount","fixed","fromWei","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","bnbPools","nonMasterPools","fetchPoolsAllowance","masterChefABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","fetchUserPendingRewards","pendingRewards","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances"],"mappings":"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","file":"static/js/main.09066946.chunk.js","sourcesContent":["import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport { Nft } from 'config/constants/types'\nimport { getContract } from 'utils/web3'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\nconst rabbitContract = getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image to local storage for the exchange\n      localStorage.setItem(\n        `profile_${address}`,\n        JSON.stringify({\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        }),\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@pureswap-libs/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\n// const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\nconst nodes = [process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  // console.log(randomIndex)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    bunnyId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    bunnyId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.tokenAddresses),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteTokenAdresses),\n          name: 'decimals',\n        },\n      ]\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // 以%a个Lp代币为单位的比率，与流通总数之比\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // 在报价令牌值中下注的总价值\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // LP中被视为下注的令牌数量(即令牌数量*LP比率)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      \n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n      \n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n  // console.log(masterChefAdress)\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingPureToken',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress, getSousChefAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  // const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const poolsWithEnd = poolsConfig\n  // console.log(poolsWithEnd)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  // console.log(callsEndBlock)\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  // const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    // const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(2677834).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchTotalPoolsPoint = async () => {\n  const poolsWithEnd = poolsConfig\n  const [totalAllPoint] = await multicall(sousChefABI, [{\n    address: getSousChefAddress(),\n    name: \"totalAllocPoint\"\n  }])\n  const point = new BigNumber(totalAllPoint[0]._hex)\n  return point\n  \n}\nexport const fetchSinglePoolsPoint = async(sousId) => {\n  // console.log(sousId)\n  const res = await multicall(sousChefABI, [{\n    address: getSousChefAddress(),\n    name: \"poolInfo\",\n    params: [sousId]\n  }])\n  const point = new BigNumber(res[0].allocPoint._hex)\n  return point\n}\nexport const fetchPoolApy = async(pool, cakePriceUsd, bnbPriceUSD) => {\n  const singleChefTotalAmount = 24 * 3600 / 3 * 0.5\n  const singlePoolsPoint = await fetchSinglePoolsPoint(pool.sousId)\n  const totalPoolsPoint = await fetchTotalPoolsPoint()\n  \n  let tokenPrice\n  if (pool.tokenName === 'PURE') {\n    tokenPrice = cakePriceUsd.toNumber()\n  } else if (pool.tokenName === 'BNB') {\n    tokenPrice = bnbPriceUSD.toNumber()\n  } else if (pool.tokenName === 'BUSD') {\n    tokenPrice = 1\n  } else {\n    const res = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${pool.getPriceTokenSymbol}&vs_currencies=usd`)\n    const _priceData = await res.json()\n    tokenPrice = _priceData[pool.getPriceTokenSymbol].usd\n  }\n  // console.log(tokenPrice)\n  let _apr\n  // 池子每日产出\n  const poolOutput = singlePoolsPoint.toNumber() / totalPoolsPoint.toNumber() * singleChefTotalAmount\n  // 质押量\n  const poolTvl = pool.totalStaked ? new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(18)).toNumber() : 0\n  \n  // const poolTvlPrice = poolTvl * tokenPrice\n  // localStorage.setItem('poolTvlPrice', poolTvlPrice.toString())\n\n  \n  if (pool.sousId === 0) {\n    _apr = new BigNumber(poolOutput / poolTvl * 365 * 100)\n  } else if (pool.sousId) {\n    if (!Number.isNaN(poolTvl * tokenPrice)) {\n      _apr = new BigNumber((poolOutput * cakePriceUsd) / (poolTvl * tokenPrice) * 365 * 100)\n    }\n  }\n  return {\n    apr: _apr,\n    tvlPrice: poolTvl * tokenPrice\n  }\n}","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport { getContract } from 'utils/web3'\nimport pancakeProfileAbi from 'config/abi/pancakeProfile.json'\nimport teamsList from 'config/constants/teams'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getContract(pancakeProfileAbi, getPancakeProfileAddress())\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    // padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    // padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import {\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n} from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\n\nexport const getProfileContract = () => {\n  return getContract(profileABI, getPancakeProfileAddress())\n}\n\nexport const getPancakeRabbitContract = () => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const getBunnyFactoryContract = () => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress())\n}\n\nexport const getBunnySpecialContract = () => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress())\n}\n\nexport default null\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  // {\n  //   id: '511060000',\n  //   type: 'IFO',\n  //   title: 'Berry',\n  //   badge: 'IFO-bry.svg',\n  // },\n  // {\n  //   id: '511050000',\n  //   type: 'IFO',\n  //   title: 'Soteria',\n  //   badge: 'IFO-wsote.svg',\n  // },\n  // {\n  //   id: '511040000',\n  //   type: 'IFO',\n  //   title: 'Helmet',\n  //   badge: 'IFO-helmet.svg',\n  // },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'IFO-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'IFO-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'IFO-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport { getContract } from 'utils/web3'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getPointCenterClaimContract = () => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress())\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<string> => {\n  // const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  // const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  // const pointCenterContract = getPointCenterClaimContract()\n  //\n  // // Returns the claim status of every IFO with a campaign ID\n  // const claimStatuses = (await pointCenterContract.methods\n  //   .checkClaimStatuses(account, ifoCampaignAddresses)\n  //   .call()) as boolean[]\n  //\n  // // Get IFO data for all IFO's that are eligible to claim\n  // const claimableIfoData = (await makeBatchRequest(\n  //   claimStatuses.reduce((accum, claimStatus, index) => {\n  //     if (claimStatus === true) {\n  //       return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n  //     }\n  //\n  //     return accum\n  //   }, []),\n  // )) as IfoMapResponse[]\n  //\n  // // Transform response to an Achievement\n  // return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n  //   if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n  //     return accum\n  //   }\n  //\n  //   const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n  //   const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n  //\n  //   return [\n  //     ...accum,\n  //     {\n  //       address,\n  //       id: claimableIfoDataItem.campaignId,\n  //       type: 'IFO',\n  //       title: getAchievementTitle(campaignMeta),\n  //       description: getAchievementDescription(campaignMeta),\n  //       badge: campaignMeta.badge,\n  //       points: Number(claimableIfoDataItem.numberPoints),\n  //     },\n  //   ]\n  // }, [])\n  return Promise.resolve('ok')\n}\n","import { getProfileContract } from 'utils/contractHelpers'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string) => {\n  try {\n    const profileContract = getProfileContract()\n    const events = await profileContract.getPastEvents('UserPointIncrease', {\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      filter: {\n        userAddress: account,\n      },\n    })\n\n    return events\n  } catch (error) {\n    return []\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  return pointIncreaseEvents.reduce((accum, event) => {\n    if (!campaignMap.has(event.returnValues.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(event.returnValues.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: event.returnValues.campaignId,\n        type: campaignMeta.type,\n        address: event.address,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(event.returnValues.numberPoints),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@pureswap-libs/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data.concat(action.payload)\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport factoryABI from 'config/abi/bunnyFactory.json'\nimport PureSwapPairABI from 'config/abi/PureSwapPair.json'\nimport multicall from 'utils/multicall'\n\nconst fetchPrice = async(tokenName: string) => {\n  if (tokenName === undefined) {\n    return new BigNumber(0)\n  }\n\tlet coingeckoTokenName: string\n\tif (tokenName === 'BUSD') {\n\t\tcoingeckoTokenName = 'binance-usd'\n\t} else if (tokenName === 'WBNB') {\n\t\tcoingeckoTokenName = 'binancecoin'\n\t} else if (tokenName === 'MX') {\n    coingeckoTokenName = 'mx-token'\n  } else if (tokenName === 'XVS') {\n    coingeckoTokenName = 'venus'\n  } else if (tokenName === 'USDT') {\n    coingeckoTokenName = 'tether'\n  } else if (tokenName === 'AUTO') {\n    coingeckoTokenName = 'auto'\n  } else if (tokenName === 'USDC') {\n    coingeckoTokenName = 'usd-coin'\n  } else if (tokenName === 'DAI') {\n    coingeckoTokenName = 'dai'\n  } else if (tokenName === 'ETH') {\n    coingeckoTokenName = 'ethereum'\n  } else if (tokenName === 'BTCB') {\n    coingeckoTokenName = 'binance-bitcoin'\n  }\n  const _price = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoTokenName}&vs_currencies=usd`)\n  const _priceJson = await _price.json()\n  if (_priceJson[coingeckoTokenName] !== undefined) {\n    window.localStorage.setItem(tokenName, JSON.stringify(_priceJson[coingeckoTokenName].usd))\n  }\n  return 0 // new BigNumber(_priceJson[coingeckoTokenName].usd)\n}\n\n// import farmsConfig from 'config/constants/farms'\nconst fetchTvl = async () => {\n  const chainId = 56\n  // const data = {}\n  const calls = [{\n    address: '0x94b4188D143b9dD6bd7083aE38A461FcC6AAd07E', // factory address\n    name: 'allPairsLength',\n  }]\n  const factory = await multicall(factoryABI, calls)\n  const arrPairCall = []\n  \n  for (let i = 0; i < Number(factory); i ++) {\n    arrPairCall.push({\n      address: '0x94b4188D143b9dD6bd7083aE38A461FcC6AAd07E', // factory address\n      name: 'allPairs',\n      params: [i]\n    })\n\n  }\n  \n  const pair = await multicall(factoryABI, arrPairCall)\n  // console.log(pair)\n  const getReservesCalls = []\n  for (let i = 0; i < pair.length; i ++) {\n    getReservesCalls.push({\n      address: pair[i][0],\n      name: 'getReserves',\n    },{\n      address: pair[i][0],\n      name: 'token0',\n    },{\n      address: pair[i][0],\n      name: 'token1',\n    })\n  }\n  const reserves = await multicall(PureSwapPairABI, getReservesCalls)\n  // get lp number, token0, token1\n  const lp = []\n  for (let i = 0; i < pair.length; i ++) {\n    lp.push({\n      num: reserves[i * 3],\n      token0: reserves[i * 3 + 1][0],\n      token1: reserves[i * 3 + 2][0]\n    })\n  }\n  // get lp token1 name\n  const getTokenNameCalls = []\n  for (let i = 0; i < lp.length; i ++) {\n    getTokenNameCalls.push({\n      address: lp[i].token1, // token1 address\n      name: 'symbol',\n    })\n  }\n  const tokenNameArr = await multicall(erc20, getTokenNameCalls)\n  const getLpToken = (slp) => {\n    const arr = []\n    slp.forEach(async (item, index) => {\n      if (tokenNameArr[index][0] !== 'PURE') {\n        fetchPrice(tokenNameArr[index][0]) // 获取token 对应价格\n      }\n      const obj = { \n        number: item.num[1], // 绑定number为 token1对应number\n        tokenName: tokenNameArr[index][0]\n      }\n      arr.push(obj)\n    })\n    return arr\n  }\n  const data = getLpToken(lp)\n  return data\n}\n\nexport default fetchTvl\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\n// import farmsConfig from 'config/constants/farms'\nimport fetchTvl from './fetchTvl'\nimport { TvlState, Tvl } from '../types'\n\nconst initialState: TvlState = { data: [{}] }\nexport const tvlSlice = createSlice({\n  name: 'Tvl',\n  initialState,\n  reducers: {\n    setTvlPublicData: (state, action) => {\n      state.data = action.payload\n    }\n  },\n})\n\n// Actions\nexport const { setTvlPublicData } = tvlSlice.actions\n\n// Thunks\nexport const fetchTvlPublicDataAsync = () => async(dispatch) => {\n  const tvl = await fetchTvl()\n  dispatch(setTvlPublicData(tvl))\n}\n\nexport default tvlSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pureswap-libs/uikit'\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(addresses.cake)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getSousChefAddress = () => {\n  return getAddress(addresses.sousChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(addresses.wbnb)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Currency {\n  isToken: boolean,\n  address: string,\n  decimal: number,\n  symbol: string\n}\n\nexport interface Underlying {\n  name: string,\n  address: string,\n  decimal: number,\n  symbol: string,\n  totalSupply: string,\n}\n\nexport interface Ifo {\n  name: string\n  address: string,\n  type: number\n  abi: Array<any>,\n  startAt: string,\n  time: string,\n  timeClose: string,\n  currency: Currency,\n  underlying: Underlying,\n  ratio: string,\n  progress: number,\n  amount: string,\n  purchasedCurrencyOf: string,\n  totalPurchasedAmount: string,\n  totalPurchasedUnderlying: string,\n  totalPurchasedCurrency: string,\n  status: number,\n  website: string,\n  whitePaper: string,\n  twitter: string,\n  telegram: string,\n  github: string,\n  yuque: string,\n  linkUrl: string,\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'ETH' = 'ETH',\n  'COMP' = 'COMP',\n  'usdc' = 'usdc',\n  'dai' = 'dai',\n  'snx' = 'snx',\n  'PURE' = 'PURE',\n  'HT' = 'HT',\n  'MX' = 'MX',\n  'BTCB' = 'BTCB',\n  'WBNB' = 'WBNB'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  56?: string\n  97: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  getPriceTokenSymbol?: string\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(6)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 0 // pure-bnb price\nexport const BASE_EXCHANGE_URL = 'https://exchange.pureswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const MAX_NUMBER = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\nexport const ADDRESS_NONE = \"0x0\"","import React from 'react'\nimport { Button, useWalletModal } from '@pureswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { getWeb3 } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pureswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { toWei } from 'web3-utils'\nimport { Ifo } from './types'\nimport SrarterV3 from '../abi/StarterV3.json'\n\nconst ifos: Ifo[] = [\n  {\n    name: 'TEST',\n    abi: SrarterV3,\n    address: '0x389cEf08D83E72C574cb91E9E16b84C71169B57A',\n    type: 0,\n    startAt: '1623124800',\n    time: '1623135600',\n    timeClose: '0',\n    currency: {\n      isToken: true,\n      address: '0xE079424a4Fef5c547478a85802B462E4699b0fa9', // pure-bnb\n      decimal: 18,\n      symbol: 'LPT',\n    },\n    underlying: {\n      address: '0x55d398326f99059fF775485246999027B3197955', // usdt\n      decimal: 18,\n      symbol: 'USDT',\n      name: 'USDT',\n      totalSupply: '400,000,000.00',\n    },\n    ratio: '1USDT=0.02LPT',\n    progress: 0,\n    amount: '1',\n    purchasedCurrencyOf: '0',\n    totalPurchasedAmount: toWei('50'),\n    totalPurchasedUnderlying: '0',\n    totalPurchasedCurrency: '0',\n    status: 0,\n    website: 'https://www.dfuture.com',\n    whitePaper: '',\n    twitter: 'https://twitter.com/dFuture_finance',\n    telegram: 'https://t.me/dfutureglobal',\n    github: '',\n    yuque: '',\n    linkUrl: 'https://heco.dfuture.com/home',\n  },\n]\n\nexport default ifos\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      // console.log(lpContract)\n      // console.log(sousChefContract)\n      // console.log(account)\n      const tx = await approve(lpContract, sousChefContract, account)\n      // console.log(tx)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await soushHarvest(sousChefContract, account, sousId)\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","export default {\n  cake: {\n    56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n    97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n  },\n  syrup: {\n    56: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    97: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  },\n  masterChef: {\n    56: '0xB8692D7768cC70C8309B669c1f5a3d856909ADB8',\n    97: '0x9bE9406FC8dD85974cA0F24CedE6f62e1A9D312D',\n  },\n  sousChef: {\n    56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n    97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n  },\n  wbnb: {\n    56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n  },\n  lottery: {\n    56: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    97: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    56: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    97: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n    97: '0x8A5eFF2BDb0b2B64160cFCFb9001e70f34293A16',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0x457439cd966C0adCC9160DfD9DeEdc265F5ce8EA',\n  },\n  ust: {\n    56: '0x55d398326f99059ff775485246999027b3197955',\n    97: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  },\n  pancakeProfile: {\n    56: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n    97: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0x94b4188D143b9dD6bd7083aE38A461FcC6AAd07E',\n    97: '0x8e0b57fD526d3540322d29dE060B21d43b857699',\n  },\n  eth: {\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    97: '0xB30f62FF4E006a69D034BF50Ab51E099E518bb30',\n  },\n  claimRefund: {\n    56: '',\n    97: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n  },\n  pointCenterIfo: {\n    56: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n    97: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n  },\n  bunnySpecial: {\n    56: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n    97: '0xFee8A195570a18461146F401d6033f5ab3380849',\n  },\n}\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  // max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n    margin-top: 40px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      await sousStake(sousChefContract, amount, account, sousId)\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  // const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      console.log(amount)\n      const txHash = await sousUnstake(sousChefContract, amount, account, sousId)\n      console.info(txHash)\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport { Contract, Provider, setMulticallAddress } from 'ethers-multicall-x'\nimport { cloneDeep } from 'lodash'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport function getMultiCallProvider(provider, chainId) {\n  // HECO multical\n  const multiCallProvider = new Provider(provider, chainId)\n  return multiCallProvider\n}\n\n/**\n * 递归toString\n */\nexport function processResult(data: any) {\n  // eslint-disable-next-line no-param-reassign\n  data = cloneDeep(data)\n  if (Array.isArray(data)) {\n    data.map((o, i) => {\n      // eslint-disable-next-line no-param-reassign\n      data[i] = processResult(o)\n      return 0\n    })\n    return data\n  }\n  if (data.toString) {\n    return data.toString()\n  }\n  if (typeof data === 'object') {\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\n    for (const key in data) {\n      Object.assign(data, {\n        [key]: processResult(0),\n      })\n    }\n    return data\n  }\n  return data\n}\n\nexport default multicall\n","export { fetchTvlPublicDataAsync } from './tvl'\nexport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getAddress,\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getBunnyFactoryAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getPointCenterIfoAddress,\n  getBunnySpecialAddress,\n} from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport bunnyFactory from 'config/abi/bunnyFactory.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport profile from 'config/abi/pancakeProfile.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport bunnySpecial from 'config/abi/bunnySpecial.json'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useBlock from './useBlock'\nimport { ADDRESS_NONE } from '../config'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useBunnyFactory = () => {\n  const bunnyFactoryAbi = (bunnyFactory as unknown) as AbiItem\n  return useContract(bunnyFactoryAbi, getBunnyFactoryAddress())\n}\n\nexport const usePancakeRabbits = () => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const useProfile = () => {\n  const profileABIAbi = (profile as unknown) as AbiItem\n  return useContract(profileABIAbi, getPancakeProfileAddress())\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, getAddress(config.contractAddress))\n}\n\nexport const usePointCenterIfoContract = () => {\n  const abi = (pointCenterIfo as unknown) as AbiItem\n  return useContract(abi, getPointCenterIfoAddress())\n}\n\nexport const useBunnySpecialContract = () => {\n  const abi = (bunnySpecial as unknown) as AbiItem\n  return useContract(abi, getBunnySpecialAddress())\n}\n\nexport const useBalance = (address) => {\n  const BNBBalance = useBNBBalance()\n  const tokenBalance = useTokenBalance(address)\n  const [balance, setBalance] = useState('0')\n  useEffect(() => {\n    if(address === ADDRESS_NONE){\n      setBalance(BNBBalance)\n    }else{\n      setBalance(tokenBalance)\n    }\n  }, [BNBBalance, tokenBalance])\n  return balance\n}\n\n\nexport const useBNBBalance = () => {\n  const { account} = useWallet()\n  const web3 = useWeb3()\n  const blockHeight = useBlock()\n  const [balance, setBalance] = useState('0')\n  useEffect(() => {\n    if (account) {\n      web3\n        .eth\n        .getBalance(account)\n        .then((balance) => {\n          setBalance(balance.toString())\n        })\n        .catch((e) => {\n          return 0\n        })\n    }\n  }, [account, blockHeight])\n  return balance\n}\n\nexport const useTokenBalance = (address) => {\n  const { account} = useWallet()\n  const blockHeight = useBlock()\n  const contract = useERC20(address)\n  const [balance, setBalance] = useState('0')\n  useEffect(() => {\n    if (account && contract && address) {\n      contract\n        .methods\n        .balanceOf(account)\n        .call()\n        .then((balance) => {\n          setBalance(balance.toString())\n        })\n        .catch((e) => {\n          return 0\n        })\n    }\n  }, [account, blockHeight, address])\n  return balance\n}\n\nexport const useTokenAllowance = (address)  => {\n  const { account} = useWallet()\n  const blockHeight = useBlock()\n  const contract = useERC20(address)\n  const [allowance, setAllowancee] = useState('0')\n  useEffect(() => {\n    if (address && contract) {\n      contract\n        .methods\n        .allowance(account, address)\n        .call()\n        .then((allowance) => {\n          setAllowancee(allowance.toString())\n        })\n        .catch((e) => {\n          console.log(e)\n          return 0\n        })\n    }\n  }, [account, address, blockHeight])\n  return allowance\n}\n\nexport const useTokenDecimals = (address) => {\n  const { account} = useWallet()\n  const blockHeight = useBlock()\n  const contract = useERC20(address)\n  const [decimals, setDecimals] = useState(18)\n  useEffect(() => {\n    if (account && contract && address) {\n      contract\n        .methods\n        .decimals()\n        .call()\n        .then((decimals) => {\n          setDecimals(decimals)\n        })\n        .catch((e) => {\n          return 18\n        })\n    }\n  }, [account, blockHeight, address])\n  return decimals\n}\n\nexport default useContract\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'PURE',\n    stakingTokenName: QuoteToken.PURE,\n    stakingTokenAddress: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n    contractAddress: {\n      56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n      97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pureswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 1,\n    tokenName: 'MX',\n    stakingTokenName: QuoteToken.MX,\n    stakingTokenAddress: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n    contractAddress: {\n      56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n      97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pureswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n    getPriceTokenSymbol: 'mx-token',\n  },\n  {\n    sousId: 2,\n    tokenName: 'WBNB',\n    stakingTokenName: QuoteToken.WBNB,\n    stakingTokenAddress: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    contractAddress: {\n      56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n      97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pureswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n    getPriceTokenSymbol: 'binancecoin',\n  },\n  {\n    sousId: 3,\n    tokenName: 'BUSD',\n    stakingTokenName: QuoteToken.BUSD,\n    stakingTokenAddress: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    contractAddress: {\n      56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n      97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pureswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n    getPriceTokenSymbol: 'binance-usd',\n  },\n  {\n    sousId: 4,\n    tokenName: 'BTCB',\n    stakingTokenName: QuoteToken.BTCB,\n    stakingTokenAddress: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    contractAddress: {\n      56: '0x63621A878f6eae37DC5BdEDB2B828D9E3747b0f4',\n      97: '0xd388A7BA0e7CF5833304E9fbe824107Efa40f2f1',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://pureswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 2,\n    isFinished: false,\n    tokenDecimals: 18,\n    getPriceTokenSymbol: 'binance-bitcoin',\n  }\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { deburr } from 'lodash'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account, sousId) => {\n  return sousChefContract.methods\n    .deposit(sousId, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account, sousId) => {\n  // console.log(amount)\n  // debugger;\n  // // shit code: hard fix for old CTK and BLK\n  // if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n  //   return sousChefContract.methods\n  //     .emergencyWithdraw(sousId)\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  // if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n  //   return sousChefContract.methods\n  //     .emergencyWithdraw()\n  //     .send({ from: account })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return sousChefContract.methods\n    .withdraw(sousId, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account, sousId) => {\n  return sousChefContract.methods\n    .emergencyWithdraw(sousId)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking('0')\n  //     .send({ from: account, gas: 200000 })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account, sousId) => {\n  // console.log(sousChefContract)\n  return sousChefContract.methods\n    .deposit(sousId, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Toast, toastTypes } from '@pureswap-libs/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchTvlPublicDataAsync,\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n} from './actions'\nimport { State, Tvl, Farm, Pool, ProfileState, TeamsState, AchievementState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchTvlPublicDataAsync())\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n// tvl\nexport const useTvl = (): Tvl[] => {\n  const tvl = useSelector((state: State) => state.tvl.data)\n  return tvl\n}\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\nconst fetchPrice = async(tokenName: string) => {\n  if (tokenName === undefined) {\n    return new BigNumber(0)\n  }\n\tlet coingeckoTokenName: string\n\tif (tokenName === 'BUSD') {\n\t\tcoingeckoTokenName = 'binance-usd'\n\t} else if (tokenName === 'WBNB') {\n\t\tcoingeckoTokenName = 'binancecoin'\n\t}\n  const _price = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoTokenName}&vs_currencies=usd`)\n  const _priceJson = await _price.json()\n  window.localStorage.setItem(tokenName, JSON.stringify(_priceJson[coingeckoTokenName].usd))\n  // console.log(_priceJson)\n  return 0 // new BigNumber(_priceJson[coingeckoTokenName].usd)\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 5 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  // fetchPrice('WBNB')\n  // return new BigNumber(localStorage.getItem('WBNB'))\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0 // Pure-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n// 用不到\nexport const usePriceEthBusd = (): BigNumber => {\n  const pid = 1 // ETH-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  \n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n// 用不到\nexport const usePriceEthBnb = (): BigNumber => {\n  const priceBnbBusd = usePriceBnbBusd()\n  const priceEthBusd = usePriceEthBusd()\n  return priceEthBusd.div(priceBnbBusd)\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'PURE-BNB LP',\n    lpAddresses: {\n      56: '0xE079424a4Fef5c547478a85802B462E4699b0fa9',\n      97: '0xF741B8feCbC9050f4eeB3BDe43a005220F3f26a5',\n    },\n    tokenSymbol: 'PURE',\n    tokenAddresses: {\n      56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n      97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'PURE-MX LP',\n    lpAddresses: {\n      56: '0xFdbF0A6233a9b3AAaf294E39b5cdD9b119F0976c',\n      97: '0x5070Fa9445201e85ffC503Faf11Cf3439fc7F80b',\n    },\n    tokenSymbol: 'PURE',\n    tokenAddresses: {\n      56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n      97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE,\n    quoteTokenAdresses: contracts.cake,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'MX-BNB LP',\n    lpAddresses: {\n      56: '0x984648bd05103fDE7ec448512da1F3A44F1B0B30',\n      97: '0xbB6B94957A19077a1253A771aAC82B1a5666a25a',\n    },\n    tokenSymbol: 'MX',\n    tokenAddresses: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '0x31eaa81bE568F3138C5aC73feEEd99eb327F1cEb',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'SAFEMARS-PURE LP',\n    lpAddresses: {\n      56: '0xa13877b015357cE230F765699A88952d246338B5',\n      97: '0xa13877b015357cE230F765699A88952d246338B5',\n    },\n    tokenSymbol: 'PURE',\n    tokenAddresses: {\n      56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n      97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE,\n    quoteTokenAdresses: contracts.cake,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'PIG-PURE LP',\n    lpAddresses: {\n      56: '0x32b06a9ff9C344141E27b940c4A718EF415a10e8',\n      97: '0x32b06a9ff9C344141E27b940c4A718EF415a10e8',\n    },\n    tokenSymbol: 'PURE',\n    tokenAddresses: {\n      56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n      97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE,\n    quoteTokenAdresses: contracts.cake,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'PURE-BUSD LP',\n    lpAddresses: {\n      56: '0x451A1fFA22c39A14E55803258d86FC795F30De7a',\n      97: '0x859D0C141d3D8da474eDa064E2d07C65C5AbB7b2',\n    },\n    tokenSymbol: 'PURE',\n    tokenAddresses: {\n      56: '0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc',\n      97: '0xCf11ddcd9b0f6e9C70aAFf9F8D3548A8B13C620e',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      56: '0xeFb83ba7589Cd602f621463C80A466e884744CD4',\n      97: '0x8A18d35f4994F8a95C83b73734308f08Ea446672',\n    },\n    tokenSymbol: 'MX',\n    tokenAddresses: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '0x31eaa81bE568F3138C5aC73feEEd99eb327F1cEb',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      56: '0xca7A9690F0B49c687ab6054fa1f5622d89e874eE',\n      97: '0x0443Bf68431EEcBA541fC6f82378d3867c9C51f2',\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '0x457439cd966C0adCC9160DfD9DeEdc265F5ce8EA',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      56: '0x37126Fdd05C8B6FF7A1bd0A24223E9414b6cC219',\n      97: '0x446a460ED845881F445b9570a100879039fD69a8',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      56: '0x55d398326f99059ff775485246999027b3197955',\n      97: '0x1A63e506D0E867a1C43845F056D057a9130828b2',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      56: '0xDbb13ef5adC8E41f06a0277E0B4c70c6775BC788',\n      97: '0x5899f4dD6A0A6BdBA7169a84934F4D1a3cb8426B',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xA65785A9aaD0092a6033c530B2a8C010f576F545',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      56: '0xe69E6A6Eda23eEcEBf5a2856C01344CA7b34685C',\n      97: '0xC336af87986e3162CFc220A7587A43f3b733D0a4',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '0xB30f62FF4E006a69D034BF50Ab51E099E518bb30',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      56: '0x8387dc46f6C9ef58E4D761F01647331f1FF65CC0',\n      97: '0x13F911a48AE97937C5bad56C074CD02776F3B757', // 1\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '0xAc3439A61926a390A20B72A711fD21211F02Aa83',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      56: '0x77Bf460aB1393C564a834f9733Bbe8A27D268cb3',\n      97: '0x320901b97cAE7841964B85675AC255b1ECB99f86', // 1\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '0xAd989D1a660343aa4dB629E9bb0e8861ab98b29A',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      56: '0x18287642a6a675502c2CdFF515c0838626Ca36aF',\n      97: '0x013F31938cFcBE4D2342cd26235Ee27cF4C894e0',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0x570C575835540a742602B6Df19984F57E46EB2f3',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      56: '0x45B196696175F7b07917de64eacB5d4D83D8fc21',\n      97: '0xf6D6Bfce89f4B1458A1F320673a3b08a28F48DeC',\n    },\n    tokenSymbol: 'XVS',\n    tokenAddresses: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '0x6423a43272642A99c2eC9736aF3BB7B702f480af',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'AUTO-BNB LP',\n    lpAddresses: {\n      56: '0xB988051a95a3f8a7a7B13eB56a28464538F2cBfd',\n      97: '0xe91a67A9c135862e3f7F1d382649aa0CFAD144F9',\n    },\n    tokenSymbol: 'AUTO',\n    tokenAddresses: {\n      56: '0xa184088a740c695e156f91f5cc086a06bb78b827',\n      97: '0x394c514d07220b4A0974c3BfE2352f9C43fF82a9',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 0,\n  //   lpSymbol: 'Pure',\n  //   lpAddresses: {\n  //     56: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n  //     97: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   },\n  //   tokenSymbol: 'SYRUP',\n  //   tokenAddresses: {\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  //     97: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pureswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pureswap-libs/uikit'\n\nwindow.localStorage.setItem('IS_DARK', 'true')\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pureswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pureswap.finance',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pureswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'IFO',\n    icon: 'NewIFOIcon',\n    href: '/IFO',\n  },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'Collectibles',\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: 'Teams & Profile',\n  //   icon: 'GroupsIcon',\n  //   calloutClass: 'rainbow',\n  //   items: [\n  //     {\n  //       label: 'Leaderboard',\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: 'Task Center',\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: 'Your Profile',\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'Overview',\n  //       href: 'https://pancakeswap.info',\n  //     },\n  //     {\n  //       label: 'Tokens',\n  //       href: 'https://pancakeswap.info/tokens',\n  //     },\n  //     {\n  //       label: 'Pairs',\n  //       href: 'https://pancakeswap.info/pairs',\n  //     },\n  //     {\n  //       label: 'Accounts',\n  //       href: 'https://pancakeswap.info/accounts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/IFO',\n  // },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/PureSwap2020',\n      },\n      {\n        label: 'Docs',\n        href: 'https://pureswap.gitbook.io/introduction/',\n      }\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pureswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@pureswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textSubtle' : 'textSubtle']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pureswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : theme.colors.textDisabled)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pureswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pureswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pureswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pureswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'textDisabled']};\n  font-weight: 400;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  // background: ${(props) => props.theme.card.background};\n  background: linear-gradient(134deg, #093438 0%, #072c30 100%, #18d6ad 100%);\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 8px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: transparent; // ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 6px;\n  color: ${(props) => (!props.disabled ? `#19d6ad` : `#366061`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 400;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 1px solid ${(props) => (!props.disabled ? `#19d6ad` : `#366061`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  // border-top: 1px solid ${({ theme }) => (theme.isDark ? '#1bd6ad' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.textDisabled};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  // font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span style={{ color: '#366061' }}>{TranslateString(408, 'Total')}</span>\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label><span style={{ color: '#366061' }}>{TranslateString(410, 'Start')}</span></Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label><span style={{ color: '#366061' }}>{TranslateString(410, 'End')}</span></Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            <p style={{ textAlign: 'center', color: '#366061', marginTop: '10px' }}>\n              {TranslateString(412, 'View project site')}\n            </p>\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pureswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n  // console.log(userData?.stakedBalance)\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  \n  \n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={57} height={57} alt={tokenName} />\n          </div>\n          \n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {account && harvest && !isOldSyrup && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? 'Collecting' : 'Harvest'}\n                onClick={async () => {\n                  setPendingTx(true)\n                  await onReward()\n                  setPendingTx(false)\n                }}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <OccupyBox />\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName}-EARNED`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button\n                  variant=\"secondary\"\n                  disabled={isFinished || requestedApproval}\n                  onClick={handleApprove}\n                  fullWidth\n                >\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  variant=\"secondary\"\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1, color: '#366061' }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1, color: '#366061' }}>{TranslateString(384, 'Your Stake')}:</div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst OccupyBox = styled.div`\n  height: 30px;\n`\n\nexport default PoolCard\n","import React, { useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pureswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools, usePriceEthBnb, usePriceCakeBusd } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { fetchTotalPoolsPoint, fetchSinglePoolsPoint, fetchPoolApy } from 'state/pools/fetchPools';\n// import { useSingleTokenPrive } from 'hooks/api'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n  position: absolute;\n  right: 0;\n`\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  // const farms = useFarms()\n  const pools = usePools(account)\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const ethPriceBnb = usePriceEthBnb()\n  const block = useBlock()\n  // const [stackedOnly, setStackedOnly] = useState(false)\n  const [stackedOnly] = useState(false)\n  const cakePriceUsd = usePriceCakeBusd()\n  const bnbPriceUSD = usePriceBnbBusd()\n  // const totalPoolsPoint = fetchTotalPoolsPoint()\n  // const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n  //   const tokenPriceBN = new BigNumber(tokenPrice)\n  //   if (tokenName === 'BNB') {\n  //     return new BigNumber(1)\n  //   }\n  //   if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n  //     return tokenPriceBN.div(bnbPriceUSD)\n  //   }\n  //   return tokenPriceBN\n  // }\n  const getApy = (pool) => {\n    fetchPoolApy(pool, cakePriceUsd, bnbPriceUSD).then(res => {\n      window.localStorage.setItem(`poolApy${pool.sousId}`, res.apr)\n      window.localStorage.setItem(`poolApy${pool.sousId}Price`, res.tvlPrice.toString())\n    })\n  }\n  const poolsWithApy = pools.map((pool, i) => {\n    // const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    // const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    // const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n    // /!\\ Assume that the farm quote price is BNB\n    // const stakingTokenPriceInBNB = isBnbPool\n    //   ? new BigNumber(1)\n    //   : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote).times(1)\n    // const rewardTokenPriceInBNB = priceToBnb(\n    //   pool.tokenName,\n    //   rewardTokenFarm?.tokenPriceVsQuote,\n    //   rewardTokenFarm?.quoteTokenSymbol,\n    // )\n    // const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    getApy(pool)\n    const apy = new BigNumber(window.localStorage.getItem(`poolApy${pool.sousId}`))// totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n    return {\n      ...pool,\n      // isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n  const stackedOnlyPools = openPools.filter(\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\n  )\n  // console.log(openPools)\n  return (\n    <Page>\n      {/* <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, 'Syrup Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake PURE to earn new tokens.')}</li>\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <CardImage src=\"/images//home_header_bg.png\" alt=\"cake logo\" width={800} />\n        <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\n      </Hero> */}\n      <Hero>\n        <CardImage src=\"/images/babg/pool_banner.png\" width={200} />\n        <div>\n          <Heading as=\"h1\" size=\"xl\" mb=\"16px\">\n            {/* {TranslateString(738, 'Pool')} */}\n            Teahouse\n          </Heading>\n          <ul>\n            <li style={{ color: '#85898c' }}>{TranslateString(580, 'Stake PURE to earn more tokens without Impermanence loss')}. {TranslateString(486, ' You can unstake at any time.')}</li>\n            {/* <li style={{ color: '#85898c' }}>{TranslateString(406, 'Rewards are calculated per block.')}</li> */}\n          </ul>\n        </div>\n        {/* <CardImage src=\"/images//home_header_bg.png\" alt=\"cake logo\" width={800} /> */}\n      </Hero>\n      {/* <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} /> */}\n      {/* <Divider /> */}\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 24px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pureswap-libs/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport confetti from 'canvas-confetti'\nimport nftList from 'config/constants/nfts'\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\n\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\n  isBullClaimable: boolean\n  isHiccupClaimable: boolean\n}\n\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  margin-bottom: 24px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\n  if (isBullClaimable && isHiccupClaimable) {\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\n  }\n\n  if (isBullClaimable) {\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n  }\n\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\n}\n\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\n  isBullClaimable,\n  isHiccupClaimable,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const collectibleMessage =\n    isBullClaimable && isHiccupClaimable\n      ? TranslateString(999, 'You won two Collectibles!')\n      : TranslateString(999, 'You won a collectible!')\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {collectibleMessage}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ClaimBullHiccupNftModal\n","import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useModal } from '@pureswap-libs/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWallet()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pureswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport Pools from './views/Pools'\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst IFO = lazy(() => import('./views/IFO'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchProfile()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <IFO />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      <ToastListener />\n      <GlobalCheckBullHiccupClaimStatus />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport tvlReducer from './tvl'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    tvl: tvlReducer\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pureswap-libs/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const formatAmount = (value, decimals:any = 18, fixed = 6) => {\n  return new BigNumber(\n    fromWei(value, decimals).toFixed(fixed === -1 ? null : fixed)\n  )\n    .toNumber()\n    .toString()\n}\n\nexport const numToWei = (value, decimals:any = 18) => {\n  return new BigNumber(\n    toWei(value, decimals).toNumber().toFixed(decimals)\n  ).toString()\n}\n\nexport const fromWei = (value, decimals = 18) => {\n  return new BigNumber(value).dividedBy(new BigNumber(10).pow(decimals))\n}\n\nconst toWei = (value, decimals) => {\n  return new BigNumber(value).multipliedBy(new BigNumber(10).pow(decimals))\n}","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n// const nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst nonMasterPools = poolsConfig\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [p.sousId, account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // console.log(stakedBalances)\n  // Cake / Cake pool\n  // const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n  // , 0: new BigNumber(masterPoolAmount).toJSON()  \n  return { ...stakedBalances }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingPureToken',\n    params: [p.sousId, account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  // const pendingReward = await masterChefContract.methods.pendingPureToken('0', account).call()\n  return { ...pendingRewards }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  // console.log(stakedBalances)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n"],"sourceRoot":""}