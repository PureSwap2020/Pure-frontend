{"version":3,"sources":["utils/format.ts","views/IFO/assets/icon/Pureswap@2x.png","views/IFO/components/IFOCard/index.tsx","views/IFO/hook.ts","views/IFO/index.tsx"],"names":["BigNumber","config","EXPONENTIAL_AT","formatAmount","value","decimals","fixed","fromWei","toFixed","toNumber","toString","dividedBy","pow","IFOCard","props","ifo","blockNumber","useBlock","useWallet","account","status","chainId","web3","useWeb3","now","parseInt","String","Date","contract","useContract","abi","address","currencyContract","ERC20","currency","useState","info","setInfo","startAt","time","totalPurchasedUnderlying","toWei","amount","useEffect","currencyToken","isToken","Contract","multicallProvider","getMultiCallProvider","providers","Web3Provider","currentProvider","poolContract","promiseList","price","totalPurchasedCurrency","purchasedCurrencyOf","totalSettleable","settleable","totalSettledUnderlying","push","timeSettle","allowance","all","then","data","processResult","currencyAllowance","totalCompleted_","totalAmount","totalVolume","totalRate","completed_","volume","rate","timeClose","totalPurchasedAmount","multipliedBy","div","Object","assign","progress","ratio","underlying","symbol","catch","e","console","log","onApprove","useCallback","methods","approve","MAX_NUMBER","send","from","Promise","resolve","reject","onStake","purchase","purchaseHT","onClaim","settle","useIFO","stake","claim","connect","reset","setNow","setAmount","isApprove","setIsApprove","approveLoadFlag","setApproveLoadFlag","confirmDisableFlag","setConfirmDisableFlag","claimDisableFlag","setClaimDisableFlag","loadFlag","setLoadFlag","balance","useBalance","timerId","setTimeout","clearTimeout","leftTime","btnFlag","flag","on","_","receipt","message","success","err","className","initialTime","direction","Consumer","h","d","split","m","s","pool","renderStatus","src","Pureswap","alt","href","target","rel","viewBox","version","xmlns","p-id","width","height","decimal","style","left","type","onClick","onChange","test","length","slice","placeholder","loading","Number","isNaN","Web3","utils","IFO","ifos","map"],"mappings":"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","file":"static/js/10.a91f33b4.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport Web3 from 'web3'\n\nBigNumber.config({ EXPONENTIAL_AT: [-20, 40] })\n\nexport const formatAddress = (address) => {\n  return `${address.slice(0, 6)} ... ${address.slice(-3)}`\n}\n\nexport const formatAmount = (value, decimals = 18, fixed = 6) => {\n  return new BigNumber(\n    fromWei(value, decimals).toFixed(fixed === -1 ? null : fixed, 1)\n  )\n    .toNumber()\n    .toString()\n}\n\nexport const numToWei = (value, decimals = 18) => {\n  return new BigNumber(\n    toWei(value, decimals).toNumber().toFixed(decimals)\n  ).toString()\n}\n\nexport const fromWei = (value, decimals = 18) => {\n  return new BigNumber(value).dividedBy(new BigNumber(10).pow(decimals))\n}\n\nconst toWei = (value, decimals) => {\n  return new BigNumber(value).multipliedBy(new BigNumber(10).pow(decimals))\n}\n\nexport const weiPlus = (value1, value2) => {\n  return new BigNumber(\n    new BigNumber(value1 || 0)\n      .plus(new BigNumber(value2 || 0))\n      .toFixed(6)\n  )\n    .toNumber()\n    .toString()\n}\n\nexport const weiDiv = (value1, value2) => {\n  if (value1 * 1 === 0 || value2 * 1 === 0) {\n    return 0\n  }\n  console.log('weiDiv', value1, value2)\n  return new BigNumber(\n    new BigNumber(value1).dividedBy(new BigNumber(value2)).toFixed(6)\n  )\n    .multipliedBy(100)\n    .toString()\n}\n\n// export const splitFormat = (num, fractionDigits) => {\n//   if (!fractionDigits) fractionDigits = 0\n//   if (Number.isNaN(num)) return num\n//   if (num) {\n//     if (num === '0') {\n//       return num\n//     }\n//     if (fractionDigits === 0) {\n//       return parseInt(num)\n//     }\n//     if (num.toString().indexOf('.') > -1) {\n//       let digit = num.toString().split('.')\n//       if (digit[1].length > fractionDigits) {\n//         let digitResult = digit[1].substring(0, fractionDigits)\n//         return `${digit[0]} . ${digitResult}`\n//       } else {\n//         return num\n//       }\n//     }\n//   } else {\n//     return num\n//   }\n// }\n","export default __webpack_public_path__ + \"static/media/Pureswap@2x.0e08a87e.png\";","import React, { Component, useState, useEffect } from 'react'\nimport { Button, message } from 'antd'\nimport './index.scss'\n// @ts-ignore\nimport { toWei } from 'web3-utils'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Web3 from 'web3'\nimport Timer from 'react-compound-timer'\nimport { useIFO } from '../../hook'\nimport { formatAmount, fromWei } from '../../../../utils/format'\nimport Pureswap from '../../assets/icon/Pureswap@2x.png'\nimport { useBalance } from '../../../../hooks/useContract'\n\nconst IFOCard = (props) => {\n  const { ifo } = props\n  const [info, approve, stake, claim] = useIFO(ifo)\n  const { account, connect, reset, status } = useWallet()\n  const [now, setNow] = useState(parseInt((Date.now() / 1000).toString()))\n  const [amount, setAmount] = useState('')\n  // const [leftTime, setLeftTime] = useState(0)\n  const [isApprove, setIsApprove] = useState(false)\n  const [approveLoadFlag, setApproveLoadFlag] = useState(false)\n  const [confirmDisableFlag, setConfirmDisableFlag] = useState(false)\n  const [claimDisableFlag, setClaimDisableFlag] = useState(false)\n  const [loadFlag, setLoadFlag] = useState(false)\n  const balance = useBalance(ifo.currency.address)\n\n  useEffect(() => {\n    console.log(info)\n  }, [info])\n\n  useEffect(() => {\n    console.log('balance', balance)\n  }, [balance])\n\n  useEffect(() => {\n    if (info && info.currency.allowance * 1 > 0) {\n      setIsApprove(true)\n    }\n  }, [info])\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      const now = parseInt((Date.now() / 1000).toString())\n      setNow(now)\n    }, 1000)\n    return () => {\n      clearTimeout(timerId)\n    }\n  }, [now])\n\n  let leftTime = 0\n  if (info && info.startAt > now) {\n    leftTime = (info.startAt - now) * 1000\n  } else if (info && info.timeClose > now) {\n    leftTime = (info.timeClose - now) * 1000\n  } else if (info && info.time > now) {\n    leftTime = (info.time - now) * 1000\n  }\n\n  useEffect(() => {\n    if ((info && info.startAt * 1 > now) || (info && info.timeClose * 1 > 0 && info.timeClose * 1 < now)) {\n      setConfirmDisableFlag(true)\n    }\n    if ((info && info.time * 1 > now) || (info && info.settleable && info.settleable.volume * 1 <= 0)) {\n      setClaimDisableFlag(true)\n    }\n  }, [info, leftTime])\n\n  const renderStatus = (pool) => {\n    const { status, timeClose = 0 } = pool\n    switch (status) {\n      case 0:\n        return (\n          <p className=\"timer_text\">\n            Will start in\n          </p>\n        )\n      case 1:\n        if (timeClose === 0 || timeClose > now) {\n          return (\n            <p className=\"timer_text\">\n              Undergoing\n            </p>\n          )\n        }\n        return (\n          <p className=\"timer_text\">\n            Waiting\n          </p>\n        )\n\n      case 2:\n        return (\n          <p className=\"timer_text\">\n           Calculating\n          </p>\n        )\n      case 3:\n        return (\n          <p className=\"timer_text\">\n           Finished\n          </p>\n        )\n      default:\n        return (\n          <p className=\"timer_text\">\n            Will start in\n          </p>\n        )\n    }\n  }\n\n  const onMax = (e) => {\n    if (balance) {\n      let max = balance\n      setAmount(formatAmount(max, info && info.currency.decimal, 6))\n    }\n  }\n\n  const onChange = (e) => {\n    const { value } = e.target\n    const re = /^[0-9]+([.|,][0-9]+)?$/g\n    if (value === '' || re.test(value) || (value.split('.').length === 2 && value.slice(value.length - 1) === '.')) {\n      setAmount(value)\n    }\n  }\n\n  const onApprove = () => {\n    if (!account) {\n      return\n    }\n\n    if (approveLoadFlag) return\n    setApproveLoadFlag(true)\n    approve()\n      .on('receipt', (_, receipt) => {\n        console.log('approve success')\n        setApproveLoadFlag(false)\n        setIsApprove(true)\n        message.success('approve success')\n      })\n      .on('error', (err, receipt) => {\n        console.log('approve error', err)\n        setApproveLoadFlag(false)\n      })\n  }\n\n  const onConfirm = () => {\n    if (!account) {\n      return\n    }\n\n    if (!amount) {\n      return\n    }\n\n    if (Number.isNaN(parseInt(amount))) {\n      return\n    }\n\n    if (confirmDisableFlag) return\n    if (approveLoadFlag) return\n    setApproveLoadFlag(true)\n    stake(toWei(amount.toString()))\n      .on('receipt', (_, receipt) => {\n        console.log('stake success')\n        setApproveLoadFlag(false)\n        message.success('success')\n      })\n      .on('error', (err, receipt) => {\n        console.log('stake error', err)\n        setApproveLoadFlag(false)\n      })\n\n  }\n\n  const onClaim = (e, btnFlag, flag) => {\n    if (!account) {\n      return\n    }\n    // 未中签 claim\n    if (flag === 'claim' && !(btnFlag && btnFlag.settleable && btnFlag.settleable.amount > 0 && now >= btnFlag.timeClose && now < btnFlag.time)) return\n\n    // 奖励 claim\n    if (flag === 'rewardClaim' && !(btnFlag && btnFlag.settleable && btnFlag.settleable.volume > 0 && btnFlag.status >= 2 && now > btnFlag.timeClose && now >= btnFlag.time)) return\n\n    if (flag === 'rewardClaim' && claimDisableFlag) return\n    if (loadFlag) return\n    flag === 'rewardClaim' && setLoadFlag(true)\n    claim()\n      .on('receipt', (_, receipt) => {\n        console.log('claim success')\n        setLoadFlag(false)\n        message.success('claim success')\n      })\n      .on('error', (err, receipt) => {\n        console.log('claim error', err)\n        setLoadFlag(false)\n      })\n  }\n\n  return (\n    <div className=\"IFO_info\">\n      <h2 className=\"IFO_info_title\">IFO: Initial Farm Offerings</h2>\n      <p className=\"IFO_info_tip\">Buy new tokens with a brand new token sale model.</p>\n      <div className=\"IFO_info_card\">\n        <div className=\"IFO_info_card_countdown\">\n          <div className=\"IFO_info_card_countdown_box\">\n            <Timer\n              initialTime={leftTime}\n              key={leftTime}\n              direction='backward'\n            >\n\n\n            <div className=\"IFO_info_card_countdown_timer\">\n              <p className=\"day\">HOURS</p>\n              <p>\n                <span className=\"timer\">\n                   <Timer.Consumer>\n                    {({ h, d }) =>\n                      parseInt(((d * 24 + h) / 10).toString()) * 1 > 0 ? parseInt((((d * 24 + h) / 10).toString())) : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n                <span className=\"timer\">\n                   <Timer.Consumer>\n                    {({ h, d }) =>\n                      ((d * 24 + h) / 10).toString().split('.')[1]\n                        ? ((d * 24 + h) / 10).toString().split('.')[1]\n                        : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n              </p>\n            </div>\n            <span className=\"delimiter\">:</span>\n            <div className=\"IFO_info_card_countdown_timer\">\n              <p className=\"day\">MINUTES</p>\n              <p>\n                <span className=\"timer\">\n                   <Timer.Consumer>\n                    {({ m, h }) =>\n                      parseInt((m / 10).toString()) * 1 > 0 ? parseInt((m / 10).toString()) : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n                <span className=\"timer\">\n                  <Timer.Consumer>\n                    {({ m, h }) =>\n                      (m / 10).toString().split('.')[1]\n                        ? (m / 10).toString().split('.')[1]\n                        : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n              </p>\n            </div>\n              <span className=\"delimiter\">:</span>\n              <div className=\"IFO_info_card_countdown_timer\">\n                <p className=\"day\">SECONDS</p>\n                <p>\n                <span className=\"timer\">\n                   <Timer.Consumer>\n                    {({ s, m, h }) =>\n                      parseInt((s / 10).toString()) * 1 > 0 ? parseInt((s / 10).toString()) : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n                  <span className=\"timer\">\n                  <Timer.Consumer>\n                    {({ s, m, h }) =>\n                      (s / 10).toString().split('.')[1]\n                        ? (s / 10).toString().split('.')[1]\n                        : '0'\n                    }\n                  </Timer.Consumer>\n                </span>\n                </p>\n              </div>\n              </Timer>\n          </div>\n          {renderStatus(info)}\n        </div>\n        <div className=\"IFO_info_card_content\">\n          <div className=\"pureswap_link\">\n            <div className=\"pureswap_title\">\n              <img src={Pureswap} alt=\"\" />\n              <p>PureSwap(Pure)</p>\n            </div>\n            <a href=\"https://www.pureswap.finance/\" target='_blank' rel=\"noreferrer\" className=\"pure_address\">\n              Learn more about PureSwap(Pure)\n              <svg\n                className=\"icon\"\n                viewBox=\"0 0 1024 1024\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                p-id=\"1281\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M424.96 128v87.04H215.04v599.04h599.04v-215.04h87.04v256c0 25.6-20.48 40.96-40.96 40.96H168.96c-25.6 0-40.96-20.48-40.96-40.96V168.96c0-25.6 20.48-40.96 40.96-40.96h256z m327.68 87.04h-194.56V128h343.04v343.04h-87.04V271.36L512 573.44 450.56 512l302.08-296.96z\"\n                  p-id=\"1282\"\n                />\n              </svg>\n            </a>\n            <a href=\"https://www.pureswap.finance/\" target='_blank' rel=\"noreferrer\" className=\"pure_address\">\n              Check PureSwap(Pure) Contract Address{' '}\n              <svg\n                className=\"icon\"\n                viewBox=\"0 0 1024 1024\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                p-id=\"1281\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M424.96 128v87.04H215.04v599.04h599.04v-215.04h87.04v256c0 25.6-20.48 40.96-40.96 40.96H168.96c-25.6 0-40.96-20.48-40.96-40.96V168.96c0-25.6 20.48-40.96 40.96-40.96h256z m327.68 87.04h-194.56V128h343.04v343.04h-87.04V271.36L512 573.44 450.56 512l302.08-296.96z\"\n                  p-id=\"1282\"\n                />\n              </svg>\n            </a>\n            <p className=\"pure_address\">\n              Add to MetaMask\n              <span className=\"metaMask_logo\" />\n            </p>\n            <a href=\"https://www.pureswap.finance/\" target='_blank' rel=\"noreferrer\" className=\"pure_address\">\n              Check PureSwap IFO Contract Address{' '}\n              <svg\n                className=\"icon\"\n                viewBox=\"0 0 1024 1024\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                p-id=\"1281\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M424.96 128v87.04H215.04v599.04h599.04v-215.04h87.04v256c0 25.6-20.48 40.96-40.96 40.96H168.96c-25.6 0-40.96-20.48-40.96-40.96V168.96c0-25.6 20.48-40.96 40.96-40.96h256z m327.68 87.04h-194.56V128h343.04v343.04h-87.04V271.36L512 573.44 450.56 512l302.08-296.96z\"\n                  p-id=\"1282\"\n                />\n              </svg>\n            </a>\n            <a href=\"https://www.pureswap.finance/\" target='_blank' rel=\"noreferrer\" className=\"pure_address\">\n              Website: https://www.pure.swap{' '}\n              <svg\n                className=\"icon\"\n                viewBox=\"0 0 1024 1024\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                p-id=\"1281\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M424.96 128v87.04H215.04v599.04h599.04v-215.04h87.04v256c0 25.6-20.48 40.96-40.96 40.96H168.96c-25.6 0-40.96-20.48-40.96-40.96V168.96c0-25.6 20.48-40.96 40.96-40.96h256z m327.68 87.04h-194.56V128h343.04v343.04h-87.04V271.36L512 573.44 450.56 512l302.08-296.96z\"\n                  p-id=\"1282\"\n                />\n              </svg>\n            </a>\n            <ul>\n              <li>\n                <a href=\"https://twitter.com/Pureswap1\" rel=\"noreferrer\" target=\"_blank\">\n                  <svg\n                    className=\"icon\"\n                    viewBox=\"0 0 1024 1024\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"2000\"\n                    width=\"24\"\n                    height=\"24\"\n                  >\n                    <path\n                      d=\"M512 938.656C276.352 938.656 85.344 747.648 85.344 512S276.352 85.344 512 85.344 938.656 276.352 938.656 512 747.648 938.656 512 938.656z m256-589.344c-19.2 8.704-39.552 14.4-60.352 16.96a107.584 107.584 0 0 0 46.208-59.584 206.848 206.848 0 0 1-66.72 26.144 103.2 103.2 0 0 0-126.304-21.44c-41.984 23.04-63.584 72.128-52.672 119.616-84.48-4.352-163.2-45.248-216.512-112.512a109.344 109.344 0 0 0-14.208 54.144c0 37.344 18.528 70.304 46.72 89.6a102.752 102.752 0 0 1-47.584-13.44v1.344c0 51.232 35.264 95.392 84.256 105.568a103.264 103.264 0 0 1-47.456 1.856c13.76 43.84 53.184 73.92 98.112 74.784A207.168 207.168 0 0 1 256 676.928a291.904 291.904 0 0 0 160.992 48.416c193.248 0 298.912-164.064 298.912-306.368 0-4.64-0.128-9.312-0.32-13.888A216.416 216.416 0 0 0 768 349.344z\"\n                      p-id=\"2001\"\n                    />\n                  </svg>\n                </a>\n              </li>\n\n              <li>\n                <a href=\"https://t.me/pureswap_en\" rel=\"noreferrer\" target=\"_blank\">\n                  <svg\n                    className=\"icon\"\n                    viewBox=\"0 0 1024 1024\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"2134\"\n                    width=\"24\"\n                    height=\"24\"\n                  >\n                    <path\n                      d=\"M512 938.656C276.352 938.656 85.344 747.648 85.344 512S276.352 85.344 512 85.344 938.656 276.352 938.656 512 747.648 938.656 512 938.656zM379.296 561.92l0.576-0.32 37.12 122.464c4.768 13.28 11.328 15.68 19.328 14.56 8-1.056 12.224-5.376 17.472-10.4l50.688-48.992 108.8 80.544c19.904 10.976 34.176 5.312 39.136-18.432l70.72-333.728c7.776-31.04-5.856-43.52-29.984-33.6L277.888 494.4c-28.32 11.328-28.16 27.2-5.12 34.24l106.56 33.28v-0.032z\"\n                      p-id=\"2135\"\n                    />\n                  </svg>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"IFO_info_card_stake\">\n            <h2>Unlimited Sale</h2>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Total Releases:</span>\n              <span className=\"stake_value\">{info && formatAmount(info.totalPurchasedAmount, info.currency.decimal, 2)}</span>\n            </p>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Ratio</span>\n              <span className=\"stake_value\">{info && info.ratio}</span>\n            </p>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">progress</span>\n              <span className=\"stake_value\">{info && (info.progress * 100).toFixed(0)}%</span>\n            </p>\n            <p className=\"progress\">\n              <span className=\"complete_schedule\" style={{ width: `${info && info.progress > 1 ? 100 : info.progress * 100}%` }} />\n              <span className=\"complete_schedule_point\" style={{ left: `${info && info.progress > 1 ? 100 : info.progress * 100}%` }} />\n            </p>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Available (LP Token)</span>\n              <button className=\"stake_value available_btn\" type='button' onClick={(e) => onMax(e)}>{formatAmount(balance)} {info.currency.symbol}</button>\n            </p>\n            <input value={amount} onChange={onChange} className=\"stake_input\" placeholder='Input Amount' />\n            <a className=\"stake_content\" rel=\"noreferrer\" href=\"https://exchange.pureswap.finance/#/add/BNB/0x481F0557FB3BB5eE461FD47F287b1ca944aD89bc\" target='_blank'>\n              <span className=\"stake_title get_lp_token\">Get more LPT(Pure-BNB LP Token)</span>\n              <span />\n            </a>\n            {!isApprove && (<Button type=\"primary\" onClick={onApprove} loading={approveLoadFlag}>\n              Approve\n            </Button>)\n            }\n            {isApprove && (<Button type=\"primary\" className={confirmDisableFlag ? 'disableBtn' : ''} onClick={onConfirm} loading={approveLoadFlag}>\n              Confirm\n            </Button>)\n            }\n          </div>\n          <div className=\"IFO_info_card_stake\">\n            <h2>Claim</h2>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">My LPT</span>\n              {\n                info && info.purchasedCurrencyOf.toString() > 0 && (<span className=\"stake_value\">{fromWei(info.purchasedCurrencyOf).toFixed(6, 1)} {info.currency.symbol}</span>)\n              }\n              {\n                info && !(info.purchasedCurrencyOf.toString() > 0) && (<span className=\"stake_value\">-</span>)\n              }\n            </p>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Winning Rate</span>\n\n              {info && info.settleable && info.purchasedCurrencyOf.toString() > 0 &&\n              <span className=\"stake_value\">{fromWei(info.settleable.rate).multipliedBy(new BigNumber(100)).toFixed(2, 1).toString() }%</span>}\n\n              {info && !info.settleable && !(info.purchasedCurrencyOf.toString() > 0) && (<span className=\"stake_value\">-</span>)}\n            </p>\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Token Get(EST)</span>\n              {\n                (info && info.purchasedCurrencyOf.toString() > 0 &&  (\n                  <span className=\"stake_value\">{ new BigNumber(Web3.utils.fromWei(info.purchasedCurrencyOf, 'ether'))\n                  .multipliedBy(\n                    new BigNumber(\n                      Web3.utils.fromWei(info.settleable.rate, 'ether')\n                    )\n                  )\n                  .dividedBy(new BigNumber(info.price))\n                  .toFixed(6, 1)\n                  .toString()}&nbsp;{info.currency.symbol}</span>))\n              }\n              {\n                (info && !(info.purchasedCurrencyOf.toString() > 0) &&  (\n                  <span className=\"stake_value\">-</span>))\n              }\n\n            </p>\n            <p className=\"dividing_line\" />\n            <p className=\"stake_content\">\n              <span className=\"stake_title\">Unused LPT</span>\n              {\n                info && info.purchasedCurrencyOf.toString() > 0 &&  (\n                  <span className=\"stake_value\">\n                    {info.settleable && formatAmount(info.settleable.amount) } {info.currency.symbol}&nbsp;\n                    {\n                      info.settleable && info.settleable.amount * 1 > 0 && now >= info.timeClose && now < info.time && (\n                        <Button className=\"claim_btn\" onClick={(e) => onClaim(e, info, 'claim')}>claim</Button>\n                      )\n                    }\n\n                 </span>)\n              }\n              {\n                info && info.purchasedCurrencyOf.toString() * 1 <= 0 && (\n                  <span className=\"stake_value\">-</span>\n                )\n              }\n            </p>\n            <p className=\"stake_content claim_box\">\n              <span className=\"stake_title\">Token Get</span>\n              {\n                info && info.settleable && info.settleable.volume * 1 > 0 && (\n                  <span className=\"stake_value\">{formatAmount(info.settleable.volume)}&nbsp;{info.currency.symbol}</span>\n                )\n              }\n              {\n                (info && !info.settleable || info.settleable && info.settleable.volume * 1 <= 0) && (<span className=\"stake_value\">-</span>)\n              }\n\n            </p>\n            <Button type=\"primary\" className={claimDisableFlag ? 'disableBtn' : ''} onClick={(e) => onClaim(e, info, 'rewardClaim')} loading={loadFlag}>\n              Claim\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default IFOCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWallet, UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { toWei, fromWei } from 'web3-utils'\nimport { providers } from 'ethers'\nimport { Contract } from 'ethers-multicall-x'\nimport { BigNumber } from 'bignumber.js'\nimport Web3 from 'web3'\nimport useBlock from '../../hooks/useBlock'\nimport ERC20 from '../../config/abi/erc20.json'\nimport { getMultiCallProvider, processResult } from '../../utils/multicall'\nimport { getWeb3 } from '../../utils/web3'\nimport { formatAmount } from '../../utils/formatBalance'\nimport useWeb3 from '../../hooks/useWeb3'\nimport useContract from '../../hooks/useContract'\nimport { MAX_NUMBER } from '../../config'\n\nexport const useIFO = (ifo) => {\n  const blockNumber = useBlock()\n  const { account, status, chainId } = useWallet()\n  const web3 = useWeb3()\n  const now: number = parseInt(String(Date.now() / 1000))\n  const contract = useContract(ifo.abi, ifo.address)\n  // @ts-ignore\n  const currencyContract = useContract(ERC20, ifo.currency.address)\n\n  const [info, setInfo] = useState(ifo)\n\n  if (ifo.status === 0) {\n    if (now < ifo.startAt * 1) {\n      ifo.status = 0\n    } else if (now < ifo.time * 1) {\n      ifo.status = 1\n    } else {\n      ifo.status = 2\n    }\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  ifo = {\n    ...ifo,\n    totalPurchasedUnderlying: ifo.status === 3 ? toWei(ifo.amount) : 0,\n  }\n\n  // @ts-ignore\n  useEffect(() => {\n    if (account) {\n      const currencyToken: any = !ifo.currency.isToken ? null : new Contract(ifo.currency.address, ERC20)\n\n      // @ts-ignore\n      const multicallProvider = getMultiCallProvider(new providers.Web3Provider(web3.currentProvider), chainId)\n\n      const poolContract: Contract = new Contract(ifo.address, ifo.abi)\n      const promiseList = [\n        poolContract.price(), // 结算时间点\n        poolContract.totalPurchasedCurrency(), // 总申购的量\n        poolContract.purchasedCurrencyOf(account),\n        poolContract.totalSettleable(),\n        poolContract.settleable(account),\n        poolContract.totalSettledUnderlying(),\n      ]\n\n      // 追加可能存在的\n      poolContract.time && promiseList.push(poolContract.time())\n      poolContract.timeSettle && promiseList.push(poolContract.timeSettle())\n      currencyToken && promiseList.push(currencyToken.allowance(account, ifo.address))\n\n      return multicallProvider\n        .all(promiseList)\n        .then((data) => {\n          // eslint-disable-next-line no-param-reassign\n          data = processResult(data)\n          let [\n            price,\n            totalPurchasedCurrency,\n            purchasedCurrencyOf,\n            totalSettleable,\n            settleable,\n            totalSettledUnderlying,\n            time = 0,\n            timeSettle = 0,\n            currencyAllowance = 0,\n          ] = data\n          const [totalCompleted_, totalAmount, totalVolume, totalRate] = totalSettleable\n          const [completed_, amount, volume, rate] = settleable\n\n          let status = ifo.status || 0 // 即将上线\n          const timeClose = time\n          if (timeSettle) {\n            // time 如果没有的话，使用timeSettle填充\n            time = timeSettle\n          }\n          if (ifo && ifo.startAt * 1 < now && status < 1) {\n            // 募集中\n            status = 1\n          }\n          if (time * 1 < now && status < 2) {\n            // 结算中\n            status = 2\n          }\n          if (totalVolume.toString() === totalSettledUnderlying.toString() && totalVolume * 1 > 0) {\n            status = 3\n          }\n\n          const totalPurchasedAmount = new BigNumber(toWei(ifo.amount, 'ether').toString())\n            .multipliedBy(new BigNumber(price))\n            .div(new BigNumber(toWei('1', 'ether')))\n\n          const totalPurchasedUnderlying = toWei(\n            new BigNumber(totalPurchasedCurrency).dividedBy(new BigNumber(price)).toFixed(0, 1),\n            'ether',\n          )\n\n          let isJoin = false\n          if (purchasedCurrencyOf > 0) {\n            isJoin = true\n          }\n\n          Object.assign(ifo.currency, {\n            allowance: currencyAllowance,\n          })\n\n          // @ts-ignore\n          const progress: number = new BigNumber(totalPurchasedCurrency).dividedBy(totalPurchasedAmount).toFixed(2, 1).toString() * 1\n\n          setInfo({\n            ...ifo,\n            ratio: `1${ifo.underlying.symbol}=${formatAmount(price, 18, 5)}${ifo.currency.symbol}`,\n            progress,\n            status,\n            time,\n            timeClose,\n            price: fromWei(price, 'ether'),\n            totalPurchasedCurrency,\n            totalPurchasedAmount: totalPurchasedAmount.toString(),\n            totalPurchasedUnderlying,\n            purchasedCurrencyOf,\n            totalSettleable: {\n              completed_: totalCompleted_,\n              amount: totalAmount,\n              volume: totalVolume,\n              rate: totalRate,\n            },\n            totalSettledUnderlying,\n            settleable: {\n              completed_,\n              amount,\n              volume,\n              rate,\n            },\n          })\n        })\n        .catch((e) => {\n          console.log(e, '===== usePoolsInfo =====')\n          setInfo(ifo)\n        })\n    }\n    return () => {}\n  }, [account, blockNumber, status])\n\n  const onApprove = useCallback(() => {\n    if(!account){\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.reject('not connect wallet ')\n    }\n\n    if(!info.currency.isToken){\n      return Promise.resolve('ok');\n    }\n\n    return currencyContract.methods.approve(\n      info.address,\n      MAX_NUMBER,\n    ).send({\n      from: account,\n    })\n  }, [account,info])\n\n  const onStake = useCallback((amount) => {\n    if(!account){\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.reject('not connect wallet ')\n    }\n\n    if(info.currency.isToken){\n      return contract.methods.purchase(amount).send({\n        from: account,\n      })\n    }\n\n    return contract.methods.purchaseHT().send({\n      from: account,\n      value: amount,\n    })\n  }, [account,info])\n\n  const onClaim = useCallback((amount) => {\n    if(!account){\n      // eslint-disable-next-line prefer-promise-reject-errors\n      return Promise.reject('not connect wallet ')\n    }\n    return contract.methods.settle().send({\n      from: account,\n    })\n  }, [account,info])\n\n  return [info, onApprove, onStake, onClaim]\n}\n","import React, { Component } from 'react'\nimport './assets/scss/index.scss'\nimport { Button, useWalletModal } from '@pureswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n// @ts-ignore\nimport IFOCard from './components/IFOCard'\nimport ifos from '../../config/constants/ifo'\n\nconst IFO = () => {\n  return (\n    <div>\n      {ifos.map((ifo) => (\n        <IFOCard key={ifo.address} ifo={ifo} />\n      ))}\n    </div>\n  )\n}\n\nexport default IFO\n"],"sourceRoot":""}